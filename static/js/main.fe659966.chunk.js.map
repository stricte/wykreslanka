{"version":3,"sources":["utils.js","Grid.js","WordList.js","useStateWithLocalStorage.js","Hello.js","Loader.js","Grats.js","App.js","reportWebVitals.js","index.js"],"names":["initGrid","m","n","Array","map","e","fill","dirs","right","left","up","down","rightdown","rightup","leftdown","leftup","randomWord","words","sort","Math","random","slice","wordCords","startCords","direction","word","wordLen","length","cords","reduce","dir","moveCursor","currentCords","placeWordOnGrid","grid","forEach","index","value","charAt","updateGridAt","newGrid","cloneGrid","validateWordCords","i","cordsOutsideGrid","positionTaken","currentValue","valueAt","row","randomDir","keys","Object","floor","randomCords","min","max","codes","fillGrid","j","String","fromCharCode","isMobile","window","matchMedia","matches","Grid","onReset","cellSelected","cellMarked","onMouseDown","onMouseUp","onMouseOver","onTouchStart","onTouchEnd","onTouchMove","className","href","onClick","preventDefault","cell","ii","classNames","selected","marked","data-x","data-y","WordList","placedWords","markedWords","includes","useStateWithLocalStorage","localStorageKey","defaultValue","React","useState","JSON","parse","localStorage","getItem","stringify","setValue","useEffect","setItem","Hello","onSubmit","username","setUsername","action","alert","id","name","type","autoFocus","autoComplete","onChange","target","Loader","Grats","onAgain","App","useQueryParam","NumberParam","c","start","setStart","stop","setStop","selectedCords","setSelectedCords","selectionMode","setSelectionMode","gameId","setGameId","uuidv4","setMarkedWords","markedCords","setMarkedCords","setGrid","setPlacedWords","placedCords","setPlacedCords","allMarked","gameInitialized","useCallback","initializeGame","wordsCount","placedWordsCords","wordsDict","initialCords","push","generate","wordMarkedIndex","markedIndex","selectedKey","concat","join","useLayoutEffect","x0","y0","x1","y1","dx","abs","sx","dy","sy","err","e2","lineCords","markedWordIndex","prev","resetGame","dummyListener","introduced","x","y","document","removeEventListener","touch","touches","elementFromPoint","clientX","clientY","dataset","parseInt","addEventListener","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe659966.chunk.js","sourcesContent":["import wordsDict from \"./words.json\";\n\nexport const lineCords = (start, stop) => {\n  let [x0, y0] = start;\n  let [x1, y1] = stop;\n\n  const cords = [];\n\n  const dx = Math.abs(x1 - x0),\n    sx = x0 < x1 ? 1 : -1;\n  const dy = Math.abs(y1 - y0),\n    sy = y0 < y1 ? 1 : -1;\n\n  let err = (dx > dy ? dx : -dy) / 2;\n\n  while (true) {\n    cords.push([x0, y0]);\n\n    if (x0 === x1 && y0 === y1) break;\n\n    const e2 = err;\n\n    if (e2 > -dx) {\n      err -= dy;\n      x0 += sx;\n    }\n    if (e2 < dy) {\n      err += dx;\n      y0 += sy;\n    }\n  }\n\n  return cords;\n};\n\nconst initGrid = (m, n) => {\n  return [...Array(m)].map((e) => Array(n).fill(null));\n};\n\nconst dirs = {\n  right: [0, 1],\n  left: [0, -1],\n  up: [-1, 0],\n  down: [1, 0],\n  rightdown: [1, 1],\n  rightup: [-1, 1],\n  leftdown: [1, -1],\n  leftup: [-1, -1],\n};\n\nconst randomWord = (words) =>\n  words.sort(() => Math.random() - Math.random()).slice(0, 1)[0];\n\nconst wordCords = (startCords, direction, word) => {\n  const wordLen = word.length;\n  const cords = [startCords];\n\n  return Array(wordLen - 1)\n    .fill(direction)\n    .reduce(\n      (cords, dir) => [...cords, moveCursor(cords.slice(-1)[0], dir)],\n      cords\n    );\n};\n\nconst moveCursor = (currentCords, direction) => {\n  return [currentCords[0] + direction[0], currentCords[1] + direction[1]];\n};\n\nconst placeWordOnGrid = (word, wordCords, grid) => {\n  wordCords.forEach((cords, index) => {\n    const value = word.charAt(index);\n    grid = updateGridAt(cords, value, grid);\n  });\n\n  return grid;\n};\n\nconst updateGridAt = (cords, value, grid) => {\n  const newGrid = cloneGrid(grid);\n  newGrid[cords[0]][cords[1]] = value;\n\n  return newGrid;\n};\n\nconst validateWordCords = (word, wordCords, grid) => {\n  for (let i = 0; i < wordCords.length; i++) {\n    const value = word.charAt(i);\n    const cords = wordCords[i];\n\n    if (cordsOutsideGrid(cords, grid)) return false;\n    if (positionTaken(cords, value, grid)) return false;\n  }\n  return true;\n};\n\nconst cordsOutsideGrid = (cords, grid) => {\n  if (cords[0] < 0 || cords[0] > grid.length - 1) return true;\n  if (cords[1] < 0 || cords[1] > grid[0].length - 1) return true;\n\n  return false;\n};\n\nconst positionTaken = (cords, value, grid) => {\n  const currentValue = valueAt(cords, grid);\n  return !!currentValue && currentValue !== value;\n};\n\nconst valueAt = (cords, grid) => {\n  return grid[cords[0]][cords[1]];\n};\n\nconst cloneGrid = (grid) => {\n  return grid.map((row) => [...row]);\n};\n\nconst randomDir = (dirs) => {\n  const keys = Object.keys(dirs);\n  const key = keys[Math.floor(Math.random() * keys.length)];\n\n  return dirs[key];\n};\n\nconst randomCords = (m, n) => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\n  return [random(0, m), random(0, n)];\n};\n\nconst codes = [\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  261,\n  263,\n  281,\n  322,\n  324,\n  243,\n  347,\n  378,\n  380,\n];\n\nconst randomValue = () =>\n  String.fromCharCode(codes[Math.floor(Math.random() * codes.length)]);\n\nconst fillGrid = (grid) => {\n  grid = cloneGrid(grid);\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid[0].length; j++) {\n      if (!grid[i][j]) {\n        grid[i][j] = randomValue();\n      }\n    }\n  }\n\n  return grid;\n};\n\nexport const generate = (m = 10, n = 10, wordsCount = 10) => {\n  let grid = initGrid(m, n);\n  let placedWords = [];\n  let placedWordsCords = [];\n\n  while (placedWords.length < wordsCount) {\n    const word = randomWord(wordsDict);\n\n    if (placedWords.includes(word)) continue;\n\n    const direction = randomDir(dirs);\n    const initialCords = randomCords(m, n);\n\n    const cords = wordCords(initialCords, direction, word);\n\n    if (validateWordCords(word, cords, grid)) {\n      grid = placeWordOnGrid(word, cords, grid);\n\n      placedWords.push(word);\n      placedWordsCords.push(cords);\n    }\n  }\n\n  grid = fillGrid(grid);\n\n  return [placedWords, placedWordsCords, grid];\n};\n\nexport const isMobile = () =>\n  window.matchMedia(\"(hover: none) and (pointer: coarse)\").matches;\n\nexport const storageAvailable = (type) => {\n  var storage;\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e instanceof DOMException &&\n      (e.code === 22 ||\n        e.code === 1014 ||\n        e.name === \"QuotaExceededError\" ||\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      storage &&\n      storage.length !== 0\n    );\n  }\n};\n","import React from \"react\";\n\nimport classNames from \"classnames\";\n\nimport { isMobile } from \"./utils\";\n\nexport const Grid = ({\n  grid,\n  onReset,\n  cellSelected,\n  cellMarked,\n  onMouseDown,\n  onMouseUp,\n  onMouseOver,\n  onTouchStart,\n  onTouchEnd,\n  onTouchMove,\n}) => {\n  return (\n    <div className=\"grid\">\n      <div className=\"toolbar\">\n        <a\n          className=\"btn red\"\n          href=\"#reset\"\n          onClick={(e) => {\n            e.preventDefault();\n            onReset();\n          }}\n        >\n          Od nowa\n        </a>\n      </div>\n      <div>\n        {grid.map((row, i) => (\n          <div className=\"row\" key={`row-${i}`}>\n            {row.map((cell, ii) => (\n              <div\n                className={classNames(\"cell\", {\n                  selected: cellSelected([i, ii]),\n                  marked: cellMarked([i, ii]),\n                })}\n                data-x={i}\n                data-y={ii}\n                key={`cell-${ii}`}\n                onMouseDown={() => !isMobile() && onMouseDown(i, ii)}\n                onMouseUp={() => !isMobile() && onMouseUp(i, ii)}\n                onMouseOver={() => !isMobile() && onMouseOver(i, ii)}\n                onTouchStart={(e) => isMobile() && onTouchStart(i, ii)}\n                onTouchEnd={() => isMobile() && onTouchEnd()}\n                onTouchMove={(e) => isMobile() && onTouchMove(e)}\n              >\n                {cell}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport classNames from \"classnames\";\n\nexport const WordList = ({ placedWords, markedWords }) => {\n  return (\n    <div className=\"wordList\">\n      {placedWords.map((word, i) => (\n        <div\n          className={classNames(\"word\", {\n            marked: markedWords.includes(i),\n          })}\n          key={`word-${i}`}\n        >\n          {word}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst useStateWithLocalStorage = (localStorageKey, defaultValue = null) => {\n  const [value, setValue] = React.useState(\n    JSON.parse(\n      localStorage.getItem(localStorageKey) || JSON.stringify(defaultValue)\n    )\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value));\n  }, [value, localStorageKey]);\n\n  return [value, setValue];\n};\n\nexport default useStateWithLocalStorage;\n","import React, { useState } from \"react\";\n\nimport \"./Hello.scss\";\n\nconst Hello = ({ onSubmit }) => {\n  const [username, setUsername] = useState(\"\");\n\n  return (\n    <div className=\"Hello\">\n      <h3>Witaj</h3>\n      <p>Jak się nazywasz?</p>\n      <form\n        action=\"#\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          username.length > 0 ? onSubmit(username) : alert(\"Podaj swoje imię\");\n        }}\n      >\n        <input\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          autoFocus={true}\n          autoComplete=\"off\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input className=\"btn white\" type=\"submit\" value=\"Zagrajmy\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Hello;\n","import React from \"react\";\n\nconst Loader = () => <div>Jeszcze chwila...</div>;\n\nexport default Loader;\n","import React from \"react\";\n\nimport \"./Grats.scss\";\n\nconst Grats = ({ username, onAgain }) => (\n  <div className=\"Grats\">\n    <h1 className=\"Title\">Gratulacje {username}!</h1>\n\n    <p>Idzie ci coraz lepiej. Za każdą wygraną zbierasz punkty.</p>\n\n    <a\n      className=\"btn red\"\n      href=\"#reset\"\n      onClick={(e) => {\n        e.preventDefault();\n        onAgain();\n      }}\n    >\n      Jeszcze raz?\n    </a>\n  </div>\n);\n\nexport default Grats;\n","import React, {\n  useState,\n  useLayoutEffect,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useQueryParam, NumberParam } from \"use-query-params\";\n\nimport { generate, lineCords } from \"./utils\";\nimport { Grid } from \"./Grid\";\nimport { WordList } from \"./WordList\";\n\nimport useStateWithLocalStorage from \"./useStateWithLocalStorage\";\nimport Hello from \"./Hello\";\nimport Loader from \"./Loader\";\nimport Grats from \"./Grats\";\n\nfunction App() {\n  const [m] = useQueryParam(\"m\", NumberParam);\n  const [n] = useQueryParam(\"n\", NumberParam);\n  const [c] = useQueryParam(\"c\", NumberParam);\n\n  const [start, setStart] = useState();\n  const [stop, setStop] = useState();\n\n  const [selectedCords, setSelectedCords] = useState();\n  const [selectionMode, setSelectionMode] = useState(false);\n\n  const [gameId, setGameId] = useStateWithLocalStorage(\"gameId\", null);\n  const [userId, setUserId] = useStateWithLocalStorage(\"userId\", uuidv4());\n  const [username, setUsername] = useStateWithLocalStorage(\"username\", null);\n\n  const [markedWords, setMarkedWords] = useStateWithLocalStorage(\n    \"markedWords\",\n    []\n  );\n  const [markedCords, setMarkedCords] = useStateWithLocalStorage(\n    \"markedCords\",\n    []\n  );\n\n  const [grid, setGrid] = useStateWithLocalStorage(\"grid\", null);\n  const [placedWords, setPlacedWords] = useStateWithLocalStorage(\n    \"placedWords\",\n    null\n  );\n  const [placedCords, setPlacedCords] = useStateWithLocalStorage(\n    \"placedCords\",\n    null\n  );\n\n  const allMarked = () => markedWords.length === placedWords.length;\n\n  const gameInitialized = useCallback(() => gameId, [gameId]);\n\n  const initializeGame = useCallback(() => {\n    const [placedWords, placedCords, grid] = generate(m, n, c);\n\n    setStart(null);\n    setStop(null);\n\n    setSelectionMode(false);\n    setSelectedCords(false);\n\n    setMarkedWords([]);\n    setMarkedCords([]);\n\n    setPlacedWords(placedWords);\n    setPlacedCords(placedCords);\n    setGrid(grid);\n\n    setGameId(uuidv4());\n  }, [\n    setPlacedWords,\n    setPlacedCords,\n    setGrid,\n    setGameId,\n    setMarkedCords,\n    setMarkedWords,\n    m,\n    n,\n    c,\n  ]);\n\n  useEffect(() => {\n    if (gameInitialized()) return;\n    initializeGame();\n  }, [gameInitialized, initializeGame]);\n\n  const onMouseDown = (x, y) => {\n    setSelectionMode(true);\n    setStart([x, y]);\n    setStop([x, y]);\n  };\n\n  const onMouseUp = (x, y) => {\n    setStop([x, y]);\n    setSelectionMode(false);\n  };\n\n  const onMouseOver = (x, y) => {\n    if (!selectionMode) return;\n    setStop([x, y]);\n  };\n\n  const wordMarkedIndex = useCallback(() => {\n    let markedIndex = -1;\n    const selectedKey = [].concat(...selectedCords).join(\"\");\n\n    placedCords.forEach((cords, index) => {\n      const placedKey = [].concat(...cords).join(\"\");\n\n      if (placedKey === selectedKey) markedIndex = index;\n    });\n\n    return markedIndex;\n  }, [selectedCords, placedCords]);\n\n  useLayoutEffect(() => {\n    if (!start) return;\n    if (!stop) return;\n\n    setSelectedCords(lineCords(start, stop));\n  }, [start, stop]);\n\n  useLayoutEffect(() => {\n    if (selectionMode) return;\n    if (!selectedCords) return;\n\n    const markedWordIndex = wordMarkedIndex();\n\n    if (markedWordIndex > -1) {\n      setMarkedWords((prev) => [...prev, markedWordIndex]);\n      setMarkedCords((prev) => [...prev, ...selectedCords]);\n    } else {\n    }\n\n    setSelectedCords();\n    setStart();\n    setStop();\n  }, [\n    selectionMode,\n    selectedCords,\n    wordMarkedIndex,\n    setMarkedCords,\n    setMarkedWords,\n  ]);\n\n  const cellMarked = (cords) => {\n    if (!markedCords) return false;\n\n    return markedCords.find(\n      (markedCords) =>\n        markedCords[0] === cords[0] && markedCords[1] === cords[1]\n    );\n  };\n\n  const cellSelected = (cords) => {\n    if (!selectedCords) return false;\n\n    return selectedCords.find(\n      (selectedCords) =>\n        selectedCords[0] === cords[0] && selectedCords[1] === cords[1]\n    );\n  };\n\n  const resetGame = () => {\n    initializeGame();\n  };\n\n  const dummyListener = (e) => e.preventDefault();\n\n  const onTouchStart = (x, y) => {\n    document.addEventListener(\"touchstart\", dummyListener);\n\n    setSelectionMode(true);\n    setStart([x, y]);\n    setStop([x, y]);\n  };\n\n  const onTouchEnd = () => {\n    document.removeEventListener(\"touchstart\", dummyListener);\n\n    setSelectionMode(false);\n  };\n\n  const onTouchMove = (e) => {\n    if (!selectionMode) return;\n\n    const touch = e.touches[0];\n    if (!touch) return;\n\n    const {\n      dataset: { x, y },\n    } = document.elementFromPoint(touch.clientX, touch.clientY);\n\n    const cords = [parseInt(x), parseInt(y)];\n\n    setStop((prev) => {\n      if (prev && prev.join(\"\") === cords.join(\"\")) return null;\n      else return cords;\n    });\n  };\n\n  const introduced = () => !!username;\n\n  const onUsername = (username) => setUsername(username);\n\n  return (\n    <>\n      <div className=\"container\">\n        {!introduced() && <Hello onSubmit={onUsername} />}\n\n        {introduced() && !gameInitialized() && <Loader />}\n\n        {introduced() && gameInitialized() && allMarked() && (\n          <Grats username={username} onAgain={resetGame} />\n        )}\n        {introduced() && gameInitialized() && !allMarked() && (\n          <>\n            <Grid\n              grid={grid}\n              onMouseDown={onMouseDown}\n              onMouseOver={onMouseOver}\n              onMouseUp={onMouseUp}\n              onReset={resetGame}\n              onTouchEnd={onTouchEnd}\n              onTouchMove={onTouchMove}\n              onTouchStart={onTouchStart}\n              cellSelected={cellSelected}\n              cellMarked={cellMarked}\n            />\n\n            <WordList placedWords={placedWords} markedWords={markedWords} />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { QueryParamProvider } from \"use-query-params\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}